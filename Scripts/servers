#!/usr/bin/env python
import getpass
import sys
import os

class SSHER( object ):

  def __init__(self):
    self.sessions_file = "/etc/servers"

  def __readFile(self):
    session_file = self.__getConfigFileName()
    file_tmp     = open(session_file, 'r')
    sessions     = file_tmp.readlines()
    file_tmp.close()

    return sessions

  def __doProccess(self):
    sessions = self.__readFile()
    tmp      = dict()

    for session in sessions:
      index  = session.split("->")[0]
      string = session.split("->")[1]
      string = string.split("\n")[0]

      tmp[index] = string

    return tmp

  def __getConfigFileName(self):
    user = getpass.getuser()
    path = None

    if user != 'root':
      path = '/home/%s/.servers' % user
    else:
      path = '/root/.servers'

    return path

  def __doConnection(self, index):
    sessions = self.__doProccess()
    permit   = False

    try:
      ssh    = sessions[index].split(" ")
      permit = True
    except KeyError:
      print "La session seleccionada no existe"

    if permit:
      if ssh[0] == "ssh":
        os.system("exec %s" % sessions[index])

  def listSessions(self):
    sessions = self.__doProccess()

    print "------------------------------------------------------------------------------------------------"
    print "| ID\t| SESSION"
    print "------------------------------------------------------------------------------------------------"

    for session in sorted(sessions.iterkeys()):
      if sessions[session].split(' ')[0] == 'ssh':
        print '|', session, '\t|', sessions[session].split('ssh')[1]

    print "------------------------------------------------------------------------------------------------"

  def connect(self, index=None):
    if index is None:
      self.listSessions()
    else:
      self.__doConnection( index )

if __name__ == '__main__':
  a = SSHER()

  try:
    a.connect(sys.argv[1])
  except IndexError:
    a.connect()
